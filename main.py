{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":982,"sourceType":"datasetVersion","datasetId":483}],"dockerImageVersionId":30732,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.metrics import classification_report,confusion_matrix\nfrom sklearn.naive_bayes import MultinomialNB\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-03T15:02:57.725398Z","iopub.execute_input":"2024-07-03T15:02:57.725875Z","iopub.status.idle":"2024-07-03T15:02:57.738364Z","shell.execute_reply.started":"2024-07-03T15:02:57.725844Z","shell.execute_reply":"2024-07-03T15:02:57.737023Z"},"trusted":true},"execution_count":9,"outputs":[{"name":"stdout","text":"/kaggle/input/sms-spam-collection-dataset/spam.csv\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# **Load Dataset**","metadata":{}},{"cell_type":"code","source":"data=pd.read_csv('/kaggle/input/sms-spam-collection-dataset/spam.csv',encoding='ISO-8859-1')\n\ndata=data.drop(data.iloc[0:,2:],axis=1)\ndata.rename(columns = {'v1':'TYPE', 'v2':'TEXT'\n                             }, inplace = True)\ndata.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-07-03T15:20:02.386215Z","iopub.execute_input":"2024-07-03T15:20:02.386757Z","iopub.status.idle":"2024-07-03T15:20:02.422871Z","shell.execute_reply.started":"2024-07-03T15:20:02.386720Z","shell.execute_reply":"2024-07-03T15:20:02.421606Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"   TYPE                                               TEXT\n0   ham  Go until jurong point, crazy.. Available only ...\n1   ham                      Ok lar... Joking wif u oni...\n2  spam  Free entry in 2 a wkly comp to win FA Cup fina...\n3   ham  U dun say so early hor... U c already then say...\n4   ham  Nah I don't think he goes to usf, he lives aro...\n5  spam  FreeMsg Hey there darling it's been 3 week's n...\n6   ham  Even my brother is not like to speak with me. ...\n7   ham  As per your request 'Melle Melle (Oru Minnamin...\n8  spam  WINNER!! As a valued network customer you have...\n9  spam  Had your mobile 11 months or more? U R entitle...","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>TYPE</th>\n      <th>TEXT</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>ham</td>\n      <td>Go until jurong point, crazy.. Available only ...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>ham</td>\n      <td>Ok lar... Joking wif u oni...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>spam</td>\n      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>ham</td>\n      <td>U dun say so early hor... U c already then say...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>ham</td>\n      <td>Nah I don't think he goes to usf, he lives aro...</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>spam</td>\n      <td>FreeMsg Hey there darling it's been 3 week's n...</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>ham</td>\n      <td>Even my brother is not like to speak with me. ...</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>ham</td>\n      <td>As per your request 'Melle Melle (Oru Minnamin...</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>spam</td>\n      <td>WINNER!! As a valued network customer you have...</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>spam</td>\n      <td>Had your mobile 11 months or more? U R entitle...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"data.describe()","metadata":{"execution":{"iopub.status.busy":"2024-07-03T15:20:24.747595Z","iopub.execute_input":"2024-07-03T15:20:24.748058Z","iopub.status.idle":"2024-07-03T15:20:24.779236Z","shell.execute_reply.started":"2024-07-03T15:20:24.748023Z","shell.execute_reply":"2024-07-03T15:20:24.777922Z"},"trusted":true},"execution_count":27,"outputs":[{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"        TYPE                    TEXT\ncount   5572                    5572\nunique     2                    5169\ntop      ham  Sorry, I'll call later\nfreq    4825                      30","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>TYPE</th>\n      <th>TEXT</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>5572</td>\n      <td>5572</td>\n    </tr>\n    <tr>\n      <th>unique</th>\n      <td>2</td>\n      <td>5169</td>\n    </tr>\n    <tr>\n      <th>top</th>\n      <td>ham</td>\n      <td>Sorry, I'll call later</td>\n    </tr>\n    <tr>\n      <th>freq</th>\n      <td>4825</td>\n      <td>30</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Extracting Spam messages**","metadata":{}},{"cell_type":"code","source":"spam_messages = data[data[\"TYPE\"]==\"spam\"]\nspam_messages.head() ","metadata":{"execution":{"iopub.status.busy":"2024-07-03T15:21:04.462970Z","iopub.execute_input":"2024-07-03T15:21:04.463397Z","iopub.status.idle":"2024-07-03T15:21:04.480720Z","shell.execute_reply.started":"2024-07-03T15:21:04.463365Z","shell.execute_reply":"2024-07-03T15:21:04.479145Z"},"trusted":true},"execution_count":28,"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"    TYPE                                               TEXT\n2   spam  Free entry in 2 a wkly comp to win FA Cup fina...\n5   spam  FreeMsg Hey there darling it's been 3 week's n...\n8   spam  WINNER!! As a valued network customer you have...\n9   spam  Had your mobile 11 months or more? U R entitle...\n11  spam  SIX chances to win CASH! From 100 to 20,000 po...","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>TYPE</th>\n      <th>TEXT</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2</th>\n      <td>spam</td>\n      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>spam</td>\n      <td>FreeMsg Hey there darling it's been 3 week's n...</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>spam</td>\n      <td>WINNER!! As a valued network customer you have...</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>spam</td>\n      <td>Had your mobile 11 months or more? U R entitle...</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>spam</td>\n      <td>SIX chances to win CASH! From 100 to 20,000 po...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"spam_messages.describe()","metadata":{"execution":{"iopub.status.busy":"2024-07-03T15:22:16.354222Z","iopub.execute_input":"2024-07-03T15:22:16.354693Z","iopub.status.idle":"2024-07-03T15:22:16.374201Z","shell.execute_reply.started":"2024-07-03T15:22:16.354650Z","shell.execute_reply":"2024-07-03T15:22:16.372583Z"},"trusted":true},"execution_count":29,"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"        TYPE                                               TEXT\ncount    747                                                747\nunique     1                                                653\ntop     spam  Please call our customer service representativ...\nfreq     747                                                  4","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>TYPE</th>\n      <th>TEXT</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>747</td>\n      <td>747</td>\n    </tr>\n    <tr>\n      <th>unique</th>\n      <td>1</td>\n      <td>653</td>\n    </tr>\n    <tr>\n      <th>top</th>\n      <td>spam</td>\n      <td>Please call our customer service representativ...</td>\n    </tr>\n    <tr>\n      <th>freq</th>\n      <td>747</td>\n      <td>4</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"# **Visualizing the data**","metadata":{}},{"cell_type":"code","source":"sns.countplot(data = data, x= data[\"TYPE\"]).set_title(\"Spam and Non-spam messages\")\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-03T15:23:28.030555Z","iopub.execute_input":"2024-07-03T15:23:28.031000Z","iopub.status.idle":"2024-07-03T15:23:28.328781Z","shell.execute_reply.started":"2024-07-03T15:23:28.030967Z","shell.execute_reply":"2024-07-03T15:23:28.327520Z"},"trusted":true},"execution_count":30,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"# **Split the dataset into train and test data**","metadata":{}},{"cell_type":"code","source":"data_train, data_test, labels_train, labels_test = train_test_split(data.TEXT,data.TYPE,test_size=0.2,random_state=0) \nprint(\"data_train, labels_train : \",data_train.shape, labels_train.shape)\nprint(\"data_test, labels_test: \",data_test.shape, labels_test.shape)","metadata":{"execution":{"iopub.status.busy":"2024-07-03T15:24:43.655638Z","iopub.execute_input":"2024-07-03T15:24:43.656023Z","iopub.status.idle":"2024-07-03T15:24:43.669000Z","shell.execute_reply.started":"2024-07-03T15:24:43.655994Z","shell.execute_reply":"2024-07-03T15:24:43.667829Z"},"trusted":true},"execution_count":32,"outputs":[{"name":"stdout","text":"data_train, labels_train :  (4457,) (4457,)\ndata_test, labels_test:  (1115,) (1115,)\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# **CountVectorize**","metadata":{}},{"cell_type":"code","source":"vectorizer = CountVectorizer()\n \ndata_train_count = vectorizer.fit_transform(data_train)\ndata_test_count  = vectorizer.transform(data_test)","metadata":{"execution":{"iopub.status.busy":"2024-07-03T15:25:08.597684Z","iopub.execute_input":"2024-07-03T15:25:08.598953Z","iopub.status.idle":"2024-07-03T15:25:08.762181Z","shell.execute_reply.started":"2024-07-03T15:25:08.598911Z","shell.execute_reply":"2024-07-03T15:25:08.760945Z"},"trusted":true},"execution_count":33,"outputs":[]},{"cell_type":"markdown","source":"# **Training the model**","metadata":{}},{"cell_type":"code","source":"clf = MultinomialNB()\nclf.fit(data_train_count, labels_train)\npredictions = clf.predict(data_test_count)\npredictions","metadata":{"execution":{"iopub.status.busy":"2024-07-03T15:25:33.301720Z","iopub.execute_input":"2024-07-03T15:25:33.303064Z","iopub.status.idle":"2024-07-03T15:25:33.339141Z","shell.execute_reply.started":"2024-07-03T15:25:33.303025Z","shell.execute_reply":"2024-07-03T15:25:33.337853Z"},"trusted":true},"execution_count":34,"outputs":[{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"array(['ham', 'ham', 'ham', ..., 'ham', 'ham', 'ham'], dtype='<U4')"},"metadata":{}}]},{"cell_type":"code","source":"print (\"accuracy_score : \", accuracy_score(labels_test, predictions))","metadata":{"execution":{"iopub.status.busy":"2024-07-03T15:25:54.761647Z","iopub.execute_input":"2024-07-03T15:25:54.762066Z","iopub.status.idle":"2024-07-03T15:25:54.772942Z","shell.execute_reply.started":"2024-07-03T15:25:54.762033Z","shell.execute_reply":"2024-07-03T15:25:54.771717Z"},"trusted":true},"execution_count":35,"outputs":[{"name":"stdout","text":"accuracy_score :  0.9874439461883409\n","output_type":"stream"}]},{"cell_type":"code","source":"print (\"confusion_matrix : \\n\", confusion_matrix(labels_test, predictions))","metadata":{"execution":{"iopub.status.busy":"2024-07-03T15:26:13.420895Z","iopub.execute_input":"2024-07-03T15:26:13.421331Z","iopub.status.idle":"2024-07-03T15:26:13.437328Z","shell.execute_reply.started":"2024-07-03T15:26:13.421301Z","shell.execute_reply":"2024-07-03T15:26:13.435680Z"},"trusted":true},"execution_count":36,"outputs":[{"name":"stdout","text":"confusion_matrix : \n [[947   2]\n [ 12 154]]\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# **Final Report**","metadata":{}},{"cell_type":"code","source":"print (classification_report(labels_test, predictions))","metadata":{"execution":{"iopub.status.busy":"2024-07-03T15:26:31.870516Z","iopub.execute_input":"2024-07-03T15:26:31.870970Z","iopub.status.idle":"2024-07-03T15:26:31.934199Z","shell.execute_reply.started":"2024-07-03T15:26:31.870940Z","shell.execute_reply":"2024-07-03T15:26:31.932745Z"},"trusted":true},"execution_count":37,"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n         ham       0.99      1.00      0.99       949\n        spam       0.99      0.93      0.96       166\n\n    accuracy                           0.99      1115\n   macro avg       0.99      0.96      0.97      1115\nweighted avg       0.99      0.99      0.99      1115\n\n","output_type":"stream"}]}]}